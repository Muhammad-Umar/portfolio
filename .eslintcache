[{"C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\index.js":"1","C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\App.js":"2","C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\Navbar.js":"3","C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\HomeCoverSection.js":"4","C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\SocialLinks.js":"5","C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\HomeCoverDescription.js":"6","C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\SkillAnimation.js":"7","C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\HomeExperience.js":"8","C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\ToolsAndTechnologies.js":"9"},{"size":220,"mtime":1609312903566,"results":"10","hashOfConfig":"11"},{"size":467,"mtime":1609514453172,"results":"12","hashOfConfig":"11"},{"size":1198,"mtime":1609312903564,"results":"13","hashOfConfig":"11"},{"size":1318,"mtime":1609517326002,"results":"14","hashOfConfig":"11"},{"size":667,"mtime":1609312903565,"results":"15","hashOfConfig":"11"},{"size":404,"mtime":1609402041065,"results":"16","hashOfConfig":"11"},{"size":1410,"mtime":1609402014638,"results":"17","hashOfConfig":"11"},{"size":726,"mtime":1609514240724,"results":"18","hashOfConfig":"11"},{"size":2947,"mtime":1609518902764,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ic9toi",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\index.js",[],["40","41"],"C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\App.js",["42"],"C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\Navbar.js",[],"C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\HomeCoverSection.js",[],"C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\SocialLinks.js",[],"C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\HomeCoverDescription.js",[],"C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\SkillAnimation.js",["43"],"import React, {useState, useEffect} from 'react'\r\n\r\nconst SkillAnimation = () => {\r\n    \r\n    const skills = [\"React\", \"Redux\", \"MongoDB\", \"Node\", \"Express\", \"JavaScript\", \"CSS\", \"SCSS\", \"HTML 5\", \"Java / Kotlin\", \"PHP\", \"WordPress\"]\r\n    const [skill, setSkill] = useState(\"\")\r\n    const [skillIndex, setSkillIndex] = useState(0);\r\n    const [skillWordIndex, setSkillWordIndex] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const word = skills[skillIndex];\r\n        let timeOut = 150;\r\n\r\n        // check if skill word length ends and also increment skill index every word ends\r\n        if(word.length === skillWordIndex){\r\n            const index = skillIndex === skills.length - 1 ? 0 : skillIndex + 1;\r\n            setSkillIndex(index);\r\n            setSkillWordIndex(1);\r\n        }\r\n        else // append extra letter every time state updates\r\n            setSkillWordIndex(skillWordIndex + 1);\r\n\r\n        const displayWord = word.substr(0, skillWordIndex);\r\n        \r\n        // extend delay time when new word starts\r\n        if(skillWordIndex === 1)\r\n            timeOut = 700;\r\n\r\n        // set delay to show word change\r\n        setTimeout(() => {\r\n            setSkill(displayWord);\r\n        }, timeOut)\r\n    }, [skill])\r\n\r\n    return (\r\n        <h3>Experience in <span className=\"skill-name\">{skill}</span> <span className=\"text-cursor\"></span></h3>\r\n    )\r\n}\r\n\r\nexport default SkillAnimation\r\n","C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\HomeExperience.js",[],"C:\\Users\\Umer\\Desktop\\Umar\\portfolio\\src\\components\\ToolsAndTechnologies.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":33,"column":8,"nodeType":"54","endLine":33,"endColumn":15,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'HomeExperience' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'skillIndex', 'skillWordIndex', and 'skills'. Either include them or remove the dependency array. You can also do a functional update 'setSkillWordIndex(s => ...)' if you only need 'skillWordIndex' in the 'setSkillWordIndex' call.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [skill, skillIndex, skillWordIndex, skills]",{"range":"61","text":"62"},[1227,1234],"[skill, skillIndex, skillWordIndex, skills]"]